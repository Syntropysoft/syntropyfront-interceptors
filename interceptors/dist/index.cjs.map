{"version":3,"file":"index.cjs","sources":["../src/ReduxInterceptor.js","../src/VuexInterceptor.js","../src/index.js"],"sourcesContent":["/**\n * ReduxInterceptor - Interceptor para Redux stores\n * Intercepta acciones y cambios de estado de Redux\n * Usa la API segura de SyntropyFront\n */\nexport default function ReduxInterceptor() {\n    let originalDispatch = null;\n    let store = null;\n    let unsubscribe = null;\n    let api = null;\n\n    return {\n        name: 'redux',\n        \n        /**\n         * Inicializa el interceptor\n         * @param {Object} apiInstance - API segura de SyntropyFront\n         */\n        init(apiInstance) {\n            api = apiInstance;\n            console.log('SyntropyFront: Redux interceptor inicializado (esperando store)');\n            \n            // Inicialización \"perezosa\" con retry\n            this.findStoreWithRetry();\n        },\n\n        /**\n         * Busca store con retry automático\n         * @param {number} retries - Número de intentos restantes\n         * @param {number} delay - Delay entre intentos en ms\n         */\n        findStoreWithRetry(retries = 5, delay = 500) {\n            const foundStore = this.findReduxStore();\n            \n            if (foundStore) {\n                this.setStore(foundStore);\n                console.log('SyntropyFront: Store de Redux encontrado y configurado automáticamente.');\n            } else if (retries > 0) {\n                console.log(`SyntropyFront: Buscando store de Redux... (${retries} intentos restantes)`);\n                setTimeout(() => this.findStoreWithRetry(retries - 1, delay), delay);\n            } else {\n                console.warn('SyntropyFront: No se encontró store de Redux después de varios intentos. Usa setStore() para configurarlo manualmente.');\n            }\n        },\n\n        /**\n         * Configura el store de Redux\n         * @param {Object} reduxStore - Store de Redux\n         */\n        setStore(reduxStore) {\n            if (!api) {\n                console.warn('SyntropyFront: Redux interceptor no inicializado');\n                return;\n            }\n\n            if (!reduxStore) {\n                console.warn('SyntropyFront: Store de Redux no válido');\n                return;\n            }\n\n            // Verificar que sea un store válido\n            if (typeof reduxStore.getState !== 'function' || typeof reduxStore.subscribe !== 'function') {\n                console.warn('SyntropyFront: Store de Redux no tiene métodos requeridos (getState, subscribe)');\n                return;\n            }\n\n            try {\n                store = reduxStore;\n\n                // Interceptar dispatch\n                originalDispatch = store.dispatch;\n                store.dispatch = (action) => {\n                    try {\n                        // Agregar breadcrumb antes del dispatch\n                        api.addBreadcrumb('redux', `Redux Action: ${action.type}`, {\n                            action: action,\n                            state: store.getState()\n                        });\n\n                        // Ejecutar dispatch original\n                        const result = originalDispatch.call(store, action);\n\n                        // Agregar breadcrumb después del dispatch\n                        api.addBreadcrumb('redux', `Redux State Updated`, {\n                            actionType: action.type,\n                            newState: store.getState()\n                        });\n\n                        return result;\n                    } catch (error) {\n                        // Si hay error en el dispatch, enviarlo\n                        api.sendError({\n                            type: 'redux_dispatch_error',\n                            error: {\n                                message: error.message,\n                                stack: error.stack\n                            },\n                            action: action\n                        });\n                        throw error;\n                    }\n                };\n\n                // Suscribirse a cambios de estado\n                unsubscribe = store.subscribe(() => {\n                    // Los breadcrumbs ya se agregaron en dispatch\n                    // Aquí podríamos agregar lógica adicional si es necesario\n                });\n\n                console.log('SyntropyFront: Store de Redux configurado');\n            } catch (error) {\n                console.error('SyntropyFront: Error configurando store de Redux:', error);\n            }\n        },\n\n        /**\n         * Busca automáticamente el store (método de conveniencia)\n         * @returns {boolean} True si encontró y configuró un store\n         */\n        autoFindStore() {\n            if (!api) {\n                console.warn('SyntropyFront: Redux interceptor no inicializado');\n                return false;\n            }\n\n            let foundStore = null;\n\n            // Buscar en ubicaciones comunes\n            if (window.reduxStore) {\n                foundStore = window.reduxStore;\n            } else if (window.store) {\n                foundStore = window.store;\n            } else if (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__.connect) {\n                // Intentar obtener desde Redux DevTools\n                try {\n                    const devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect();\n                    if (devTools && devTools.getState) {\n                        foundStore = devTools;\n                    }\n                } catch (error) {\n                    console.warn('SyntropyFront: Error conectando con Redux DevTools:', error);\n                }\n            }\n\n            if (foundStore) {\n                this.setStore(foundStore);\n                return true;\n            }\n\n            console.warn('SyntropyFront: No se encontró store de Redux automáticamente');\n            return false;\n        },\n\n        /**\n         * Obtiene información del interceptor\n         * @returns {Object} Información del interceptor\n         */\n        getInfo() {\n            return {\n                name: 'redux',\n                isInitialized: !!api,\n                hasStore: !!store,\n                storeType: store ? 'configured' : 'none',\n                methods: ['setStore', 'autoFindStore', 'getInfo']\n            };\n        },\n\n        /**\n         * Destruye el interceptor\n         */\n        destroy() {\n            try {\n                // Restaurar dispatch original\n                if (store && originalDispatch) {\n                    store.dispatch = originalDispatch;\n                }\n\n                // Desuscribirse de cambios\n                if (unsubscribe) {\n                    unsubscribe();\n                }\n\n                // Limpiar referencias\n                store = null;\n                originalDispatch = null;\n                unsubscribe = null;\n                api = null;\n\n                console.log('SyntropyFront: Redux interceptor destruido');\n            } catch (error) {\n                console.error('SyntropyFront: Error destruyendo Redux interceptor:', error);\n            }\n        }\n    };\n} ","/**\n * VuexInterceptor - Interceptor para Vuex stores\n * Intercepta mutaciones y cambios de estado de Vuex\n * Usa la API segura de SyntropyFront\n */\nexport default function VuexInterceptor() {\n    let originalCommit = null;\n    let store = null;\n    let unsubscribe = null;\n    let api = null;\n\n    return {\n        name: 'vuex',\n        \n        /**\n         * Inicializa el interceptor\n         * @param {Object} apiInstance - API segura de SyntropyFront\n         */\n        init(apiInstance) {\n            api = apiInstance;\n            console.log('SyntropyFront: Vuex interceptor inicializado (esperando store)');\n            \n            // Inicialización \"perezosa\" con retry\n            this.findStoreWithRetry();\n        },\n\n        /**\n         * Busca store con retry automático\n         * @param {number} retries - Número de intentos restantes\n         * @param {number} delay - Delay entre intentos en ms\n         */\n        findStoreWithRetry(retries = 5, delay = 500) {\n            const foundStore = this.findVuexStore();\n            \n            if (foundStore) {\n                this.setStore(foundStore);\n                console.log('SyntropyFront: Store de Vuex encontrado y configurado automáticamente.');\n            } else if (retries > 0) {\n                console.log(`SyntropyFront: Buscando store de Vuex... (${retries} intentos restantes)`);\n                setTimeout(() => this.findStoreWithRetry(retries - 1, delay), delay);\n            } else {\n                console.warn('SyntropyFront: No se encontró store de Vuex después de varios intentos. Usa setStore() para configurarlo manualmente.');\n            }\n        },\n\n        /**\n         * Configura el store de Vuex\n         * @param {Object} vuexStore - Store de Vuex\n         */\n        setStore(vuexStore) {\n            if (!api) {\n                console.warn('SyntropyFront: Vuex interceptor no inicializado');\n                return;\n            }\n\n            if (!vuexStore) {\n                console.warn('SyntropyFront: Store de Vuex no válido');\n                return;\n            }\n\n            // Verificar que sea un store válido\n            if (typeof vuexStore.commit !== 'function' || typeof vuexStore.subscribe !== 'function') {\n                console.warn('SyntropyFront: Store de Vuex no tiene métodos requeridos (commit, subscribe)');\n                return;\n            }\n\n            try {\n                store = vuexStore;\n\n                // Interceptar commit\n                originalCommit = store.commit;\n                store.commit = (type, payload, options) => {\n                    try {\n                        // Agregar breadcrumb antes del commit\n                        api.addBreadcrumb('vuex', `Vuex Mutation: ${type}`, {\n                            mutation: { type, payload },\n                            state: store.state\n                        });\n\n                        // Ejecutar commit original\n                        const result = originalCommit.call(store, type, payload, options);\n\n                        // Agregar breadcrumb después del commit\n                        api.addBreadcrumb('vuex', `Vuex State Updated`, {\n                            mutationType: type,\n                            newState: store.state\n                        });\n\n                        return result;\n                    } catch (error) {\n                        // Si hay error en el commit, enviarlo\n                        api.sendError({\n                            type: 'vuex_commit_error',\n                            error: {\n                                message: error.message,\n                                stack: error.stack\n                            },\n                            mutation: { type, payload }\n                        });\n                        throw error;\n                    }\n                };\n\n                // Suscribirse a cambios de estado\n                unsubscribe = store.subscribe((mutation, state) => {\n                    // Los breadcrumbs ya se agregaron en commit\n                    // Aquí podríamos agregar lógica adicional si es necesario\n                });\n\n                console.log('SyntropyFront: Store de Vuex configurado');\n            } catch (error) {\n                console.error('SyntropyFront: Error configurando store de Vuex:', error);\n            }\n        },\n\n        /**\n         * Busca automáticamente el store (método de conveniencia)\n         * @returns {boolean} True si encontró y configuró un store\n         */\n        autoFindStore() {\n            if (!api) {\n                console.warn('SyntropyFront: Vuex interceptor no inicializado');\n                return false;\n            }\n\n            let foundStore = null;\n\n            // Buscar en ubicaciones comunes\n            if (window.$store) {\n                foundStore = window.$store;\n            } else if (window.store) {\n                foundStore = window.store;\n            } else if (window.vuexStore) {\n                foundStore = window.vuexStore;\n            }\n\n            if (foundStore) {\n                this.setStore(foundStore);\n                return true;\n            }\n\n            console.warn('SyntropyFront: No se encontró store de Vuex automáticamente');\n            return false;\n        },\n\n        /**\n         * Obtiene información del interceptor\n         * @returns {Object} Información del interceptor\n         */\n        getInfo() {\n            return {\n                name: 'vuex',\n                isInitialized: !!api,\n                hasStore: !!store,\n                storeType: store ? 'configured' : 'none',\n                methods: ['setStore', 'autoFindStore', 'getInfo']\n            };\n        },\n\n        /**\n         * Destruye el interceptor\n         */\n        destroy() {\n            try {\n                // Restaurar commit original\n                if (store && originalCommit) {\n                    store.commit = originalCommit;\n                }\n\n                // Desuscribirse de cambios\n                if (unsubscribe) {\n                    unsubscribe();\n                }\n\n                // Limpiar referencias\n                store = null;\n                originalCommit = null;\n                unsubscribe = null;\n                api = null;\n\n                console.log('SyntropyFront: Vuex interceptor destruido');\n            } catch (error) {\n                console.error('SyntropyFront: Error destruyendo Vuex interceptor:', error);\n            }\n        }\n    };\n} ","/**\n * @syntropyfront/interceptors\n * Official interceptors for SyntropyFront\n * \n * This package provides framework-specific interceptors that can be used\n * with the core SyntropyFront library via the injectCustomInterceptor() method.\n */\n\n// Export individual interceptors\nexport { default as ReduxInterceptor } from './ReduxInterceptor.js';\nexport { default as VuexInterceptor } from './VuexInterceptor.js';\n\n// Export all interceptors as a collection\nexport const interceptors = {\n  redux: ReduxInterceptor,\n  vuex: VuexInterceptor\n};\n\n// Default export\nexport default interceptors; "],"names":["ReduxInterceptor","VuexInterceptor"],"mappings":"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"}